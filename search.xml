<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>github-page部署https</title>
      <link href="/gh/deploy-https/"/>
      <url>/gh/deploy-https/</url>
      
        <content type="html"><![CDATA[<p>个人域名接入github，强制使用https。</p><span id="more"></span><h1 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h1><p>在做以下事情之前，先要保证username.github.io是可以正常访问的，也就是用户的github-page要可以正常访问</p><p>在github page部署个人blog也很多教程了，这里不再细说。</p><h2 id="个人域名"><a href="#个人域名" class="headerlink" title="个人域名"></a>个人域名</h2><p>个人购买域名可以通过各个服务商进行购买，阿里云、腾讯云、华为云等等，并且网上也很多教程，这里不再细说了。</p><h2 id="CNAME"><a href="#CNAME" class="headerlink" title="CNAME"></a>CNAME</h2><p>笔者的blog是基于<a href="https://molunerfinn.com/hexo-theme-melody-doc/zh-Hans/">hexo-theme-melody</a></p><p>CNAME文件需要放在source下，在github action部署的时候会自动将CNAME部署到gh-page分支</p><h3 id="CNAME文件内容"><a href="#CNAME文件内容" class="headerlink" title="CNAME文件内容"></a>CNAME文件内容</h3><p>在source下创建CNAME文件，写入域名，yourdomain.cn</p><p><strong>CNAME文件名要大写</strong></p><p><strong>CNAME文件名要大写</strong></p><p><strong>CNAME文件名要大写</strong></p><p>source&#x2F;CNAME</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yourdomain.cn</span><br></pre></td></tr></table></figure><h1 id="域名商管理后台修改域名解析"><a href="#域名商管理后台修改域名解析" class="headerlink" title="域名商管理后台修改域名解析"></a>域名商管理后台修改域名解析</h1><p>默认情况下域名是解析到购买的服务器，现在我们要修改到指向username.github.io</p><ul><li>添加一个CNAME，主机记录@，记录值username.github.io</li><li>添加一个CNAME，主机记录www，记录值username.github.io</li></ul><p>这样无论是否使用www，都能正常访问，<a href="http://www.yourdomain.cn/">www.yourdomain.cn</a>, yourdomain.cn，都会先解析成username.github.io，再根据CNAME变回个人域名</p><p><img src="/pics/github/deploy-https-1.png"></p><h1 id="github-setting"><a href="#github-setting" class="headerlink" title="github setting"></a>github setting</h1><p>去github对应的blog仓库内设置个人域名和https事宜</p><p>打开仓库，点击Settings，点击左侧的Pages，找到custom domain，填入个人域名</p><p>如果域名管域名解析那里设置正确，填入个人域名后，稍等一会会显示dns解析正确，就可以勾选Enforce HTTPS了</p><p><img src="/pics/github/deploy-https-2.png"><br><img src="/pics/github/deploy-https-3.png"></p><h1 id="ping-yourdomain-cn"><a href="#ping-yourdomain-cn" class="headerlink" title="ping yourdomain.cn"></a>ping yourdomain.cn</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">64 bytes from xxx.xxx.xxx.xxx: icmp_seq=0 ttl=53 time=99.820 ms</span><br><span class="line">64 bytes from xxx.xxx.xxx.xxx: icmp_seq=1 ttl=53 time=100.451 ms</span><br><span class="line">64 bytes from xxx.xxx.xxx.xxx: icmp_seq=2 ttl=53 time=101.277 ms</span><br><span class="line">64 bytes from xxx.xxx.xxx.xxx: icmp_seq=3 ttl=53 time=109.720 ms</span><br></pre></td></tr></table></figure><p>上方打印的 from xxx.xxx.xxx.xxx，这些xxx代表的是ip地址。</p><p>如果这个ip地址并不是你的服务器地址，并且个人域名可以正常访问，说明配置没有问题了。</p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github-page </tag>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试基础理论</title>
      <link href="/basic_theory_of_testing/basic_theory/"/>
      <url>/basic_theory_of_testing/basic_theory/</url>
      
        <content type="html"><![CDATA[<p>测试基础理论是测试工作的基础</p><span id="more"></span><h2 id="系统与子系统"><a href="#系统与子系统" class="headerlink" title="系统与子系统"></a>系统与子系统</h2><h3 id="系统与子系统的定义"><a href="#系统与子系统的定义" class="headerlink" title="系统与子系统的定义"></a>系统与子系统的定义</h3><p>系统泛指一群有关联的个体组成，根据某种规则运作，完成了个别元件不能完成的工作的群体。</p><p>子系统也是一群有关系的紫铜组成，多半会是更大系统的一部分。</p><p>提取核心词</p><ul><li>关联：一群关联的个体</li><li>规则：个体按照规则运作</li><li>能力：系统能力超越个体能力</li><li>分层：自顶向下的逐层分解</li></ul><h2 id="架构与框架"><a href="#架构与框架" class="headerlink" title="架构与框架"></a>架构与框架</h2><p>框架是为了实现某个业界标准的软件组件规范，也是指为了实现某个软件组件规范，提供规范所要求的基础功能的软件产品。常见spring，django，spring boot等</p><p>软件架构指软件的基础结构，创造这些基础结构的准则，以及对结构的描述。常见的mvp架构，微服务架构。</p><p>我们常见的mvc也是架构。mvc规定了model层，view层，controller层具体的职责规范，按照这个规范实现的mvc框架，是与语言无关的。</p><p><img src="/pics/architecture/architecture-defination-2.png"></p><h2 id="模块与组件"><a href="#模块与组件" class="headerlink" title="模块与组件"></a>模块与组件</h2><p>模块是一套一致而相互有密切关联的软件组织，分别包含了程序和数据结构部分，现代软件开发利用了模块作为合作的单位，模块分开编写，允许人员同时写作，编写和研究。常见的微信中，支付模块，朋友圈模块，聊天模块等，按照逻辑拆分。</p><p>组件则是自包含，可编程，可重用，与语言无关系的软件单元，很容易被复用于应用程序，模块，子系统等。例如常见的nginx，web服务器，mysql，这些组件就可以复用于各个子系统，模块等，按照物理拆分。</p><p><img src="/pics/architecture/architecture-defination-1.png"></p><p>那么模块的主要目的是<strong>职责分离</strong>，而组件则是<strong>单元复用</strong></p><h2 id="架构定义和剖析"><a href="#架构定义和剖析" class="headerlink" title="架构定义和剖析"></a>架构定义和剖析</h2><h3 id="4R架构-Rank-Role-Relation-Rule"><a href="#4R架构-Rank-Role-Relation-Rule" class="headerlink" title="4R架构 - Rank + Role + Relation + Rule"></a>4R架构 - Rank + Role + Relation + Rule</h3><p>软件架构指的是软件系统的顶层结构（Rank），定义了系统由哪些角色组成，角色（Role）之间的关系（Relation）和运作规则（Rule）</p><ul><li>顶层结构Rank：架构是分层的</li><li>组成角色Role：系统包含哪些角色，包括但不限于子系统，模块，组件等</li><li>角色关系Relation：角色之间的关系</li><li>运作规则Rule：角色如何协作完成系统功能</li></ul><h3 id="4R架构应用"><a href="#4R架构应用" class="headerlink" title="4R架构应用"></a>4R架构应用</h3><p><img src="/pics/architecture/architecture-defination-3.png"></p><p>学习一个架构，可以套这个架构关系图，先看顶层结构，再找角色，角色之间的关系，最后确认运作规则，了解清楚才能进入源码的学习。</p>]]></content>
      
      
      <categories>
          
          <category> testing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> testing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql 搭建与基础</title>
      <link href="/database/mysql/basic/"/>
      <url>/database/mysql/basic/</url>
      
        <content type="html"><![CDATA[<p>mysql基础学习与基础docker搭建</p><span id="more"></span><h2 id="数据库相关定义"><a href="#数据库相关定义" class="headerlink" title="数据库相关定义"></a>数据库相关定义</h2><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>数据库 database，按照特定格式存储数据的<strong>文件集合</strong></p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>用户可以对存储的数据进行增删改查操作。</p><h3 id="数据库管理系统"><a href="#数据库管理系统" class="headerlink" title="数据库管理系统"></a>数据库管理系统</h3><p>用户与操作系统之间使用的维护数据库的数据管理软件，例如 mysql，mongodb，oracle 等。</p><h3 id="数据库分类"><a href="#数据库分类" class="headerlink" title="数据库分类"></a>数据库分类</h3><p>分为关系型数据库和非关系型数据库，mysql 数据关系型</p><h4 id="关系型数据库是由多张表连接组成的数据库"><a href="#关系型数据库是由多张表连接组成的数据库" class="headerlink" title="关系型数据库是由多张表连接组成的数据库"></a>关系型数据库是由多张表连接组成的数据库</h4><p>优点：</p><ul><li>表结构，格式一致，易于维护</li><li>提供成熟的 sql 语言操作，使用方便</li><li>支持事务，表关联外键，能充分保证数据安全与完整性</li><li>数据存储在硬盘中，丢失风险低</li></ul><p>缺点：</p><ul><li>数据存储在硬盘，读写性能较低，不能满足海量数据的高效率读写，经过优化可以提高一定查询速度，拆分表，表按照月度拆分等</li><li>只支持基础类型和少量的集合类型</li></ul><p>对于高并发的场景，可以分库，建立 mysql 集群。</p><p>分布式和集群的区别：</p><ul><li>分布式是指将不同业务分布到不同地方</li><li>集群是将几台服务器集中在一起，目的是为了同一个业务</li></ul><h4 id="非关系性数据库-NoSql"><a href="#非关系性数据库-NoSql" class="headerlink" title="非关系性数据库 NoSql"></a>非关系性数据库 NoSql</h4><p>优点：</p><ul><li>支持存储格式较多，可以是 key-value，数组，文档形式，图片形式</li><li>速度快，更适合海量数据访问</li><li>支持分布式处理，一个数据库可以分成多个部分保存到不同服务器</li></ul><p>缺点</p><ul><li>非关系型数据库没有 sql 支持，使用不便，维护成本高</li><li>没有事务处理，没有表关联，所以无法保证数据完整性和安全性，不适合对安全要求较高的场景</li><li>功能相对关系型数据库会不够完善（随着发展，肯定会继续完善）</li></ul><h2 id="mysql-数据库安装"><a href="#mysql-数据库安装" class="headerlink" title="mysql 数据库安装"></a>mysql 数据库安装</h2><h3 id="mysqld-和-mysql"><a href="#mysqld-和-mysql" class="headerlink" title="mysqld 和 mysql"></a>mysqld 和 mysql</h3><ul><li>mysqld 在安装好 mysql 数据库后，身份是一个后台服务程序，mysql 启动后，mysqld 会开启一个守护进程，如果守护进程没有开启，mysql 服务器可能会挂掉</li><li>mysql 相当于是客户端和 mysql 服务器之间进行 sql 语句交互提供操作环境的 cli 命令行工具，客户端连接 mysql 服务器和操作表都在这个操作环境下进行，参考一下前端开发中的脚手架，也是提供了操作的命令行工具</li></ul><h3 id="docker-安装-mysql"><a href="#docker-安装-mysql" class="headerlink" title="docker 安装 mysql"></a>docker 安装 mysql</h3><h4 id="拉取-mysql-的镜像"><a href="#拉取-mysql-的镜像" class="headerlink" title="拉取 mysql 的镜像"></a>拉取 mysql 的镜像</h4><p>mac m1 arm64v8 平台</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull arm64v8/mysql:latest</span><br></pre></td></tr></table></figure><p>其他平台</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:latest</span><br></pre></td></tr></table></figure><h4 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=some_root_password -p 3306:3306  -d arm64v8/mysql:latest</span><br></pre></td></tr></table></figure><h4 id="使用-navicat-测试-mysql-连接"><a href="#使用-navicat-测试-mysql-连接" class="headerlink" title="使用 navicat 测试 mysql 连接"></a>使用 navicat 测试 mysql 连接</h4><p>填入对应账号密码，主机等，然后点击左下角的 test connection</p><p><img src="/pics/infrastructure/test-mysql.jpeg"></p><p>测试成功后，点击右下角 save 保存连接</p><p><img src="/pics/infrastructure/test-mysql-success.jpeg"></p><h3 id="my-ini-x2F-my-cnf-配置文件解析"><a href="#my-ini-x2F-my-cnf-配置文件解析" class="headerlink" title="my.ini&#x2F;my.cnf 配置文件解析"></a>my.ini&#x2F;my.cnf 配置文件解析</h3><p>现阶段一般都是使用 docker 搭建数据库等环境</p><p>本地环境</p><ul><li>物理机：mac m1</li><li>虚拟机：docker</li><li>镜像：arm64v8&#x2F;mysql</li></ul><p>不同物理机平台可能会有些不同</p><p>在 docker 中，my.cnf&#x2F;my.ini 位于&#x2F;etc&#x2F;my.cnf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line"><span class="comment"># mysql客户端默认字符集</span></span><br><span class="line">default-character-set=UTF8MB4</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line">skip-host-cache</span><br><span class="line">skip-name-resolve</span><br><span class="line"><span class="comment"># mysql数据库的数据存储目录</span></span><br><span class="line">datadir=/var/lib/mysql</span><br><span class="line">socket=/var/run/mysqld/mysqld.sock</span><br><span class="line">secure-file-priv=/var/lib/mysql-files</span><br><span class="line">pid-file=/var/run/mysqld/mysqld.pid</span><br><span class="line">user=mysql</span><br><span class="line"><span class="comment"># 服务端使用的字符集,与客户端一样</span></span><br><span class="line">character-set-server=UTF8MB4</span><br><span class="line"><span class="comment"># 最大连接数</span></span><br><span class="line">max_connections=200</span><br><span class="line"><span class="comment"># 创建新表使用的默认存储引擎</span></span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">port=3306</span><br><span class="line">socket=/var/run/mysqld/mysqld.sock</span><br><span class="line"></span><br><span class="line">!includedir /etc/mysql/conf.d/</span><br></pre></td></tr></table></figure><h3 id="mysql-登录"><a href="#mysql-登录" class="headerlink" title="mysql 登录"></a>mysql 登录</h3><p>进入镜像内部</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it &lt;container-name&gt; bash</span><br></pre></td></tr></table></figure><p>输入 mysql -u root -p 后，提示输入密码，输入密码后就可以登录到 mysql 内部了</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><h2 id="mysql-基本操作"><a href="#mysql-基本操作" class="headerlink" title="mysql 基本操作"></a>mysql 基本操作</h2><p>操作需要成功登录 mysql 之后</p><h3 id="显示所有数据库"><a href="#显示所有数据库" class="headerlink" title="显示所有数据库"></a>显示所有数据库</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><h3 id="新建用户"><a href="#新建用户" class="headerlink" title="新建用户"></a>新建用户</h3><p>创建一个没有权限用户</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create user <span class="string">&#x27;admin&#x27;</span> identified with mysql_native_password by <span class="string">&#x27;some_psw&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="分配权限"><a href="#分配权限" class="headerlink" title="分配权限"></a>分配权限</h3><p>分配所有权限给 admin</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges ON *.* TO admin@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><p>创建名称为 test 的数据库，如果数据库已存在，则不创建。</p><p>character: 指定数据库的字符集，避免存储的数据出现乱码，或者某些字符不支持</p><p>collate: 指定字符集的默认校对规则</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database IF NOT EXISTS <span class="built_in">test</span> CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;</span><br></pre></td></tr></table></figure><h3 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h3><p>显示所有数据库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases</span><br></pre></td></tr></table></figure><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><p>如果 test 数据库存在，删除 test 数据库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database <span class="keyword">if</span> exists <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="切换数据库"><a href="#切换数据库" class="headerlink" title="切换数据库"></a>切换数据库</h3><p>会切换到 test 数据库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use <span class="built_in">test</span>;</span><br></pre></td></tr></table></figure><h3 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h3><p>前面说过，关系型数据库是一张一张的表架构组合而成，userid，username，psw 等这些称为字段（field），而字段的类型从创建表阶段就定好了</p><p>userid int NOT NULL AUTO_INCREMENT<br>userid int 类型 非空 自增长</p><p>primary key(userid)，表示是一个可以唯一表示一条记录的字段</p><p><strong>注意：创建数据表之前必须使用 use &lt;database name&gt;去切换到对应的数据库</strong></p><p><strong>注意：创建数据表之前必须使用 use &lt;database name&gt;去切换到对应的数据库</strong></p><p><strong>注意：创建数据表之前必须使用 use &lt;database name&gt;去切换到对应的数据库</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">create table userinfo(</span><br><span class="line">  userid int NOT NULL AUTO_INCREMENT,</span><br><span class="line">  username varchar(30) NOT NULL,</span><br><span class="line">  psw int NOT NULL,</span><br><span class="line">  address varchar(50) default <span class="string">&#x27;empty address&#x27;</span>,</span><br><span class="line">  valid TINYINT default 1,</span><br><span class="line">  birth DATETIME null,</span><br><span class="line">  PRIMARY KEY(userid)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>创建数据表完成，输入 show tables;显示当前数据库的表</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show tables;</span><br><span class="line">+----------------+</span><br><span class="line">| Tables_in_test |</span><br><span class="line">+----------------+</span><br><span class="line">| userinfo       |</span><br><span class="line">+----------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="修改表名"><a href="#修改表名" class="headerlink" title="修改表名"></a>修改表名</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; ALTER TABLE userinfo RENAME TO myuserinfo;</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+----------------+</span><br><span class="line">| Tables_in_test |</span><br><span class="line">+----------------+</span><br><span class="line">| myuserinfo     |</span><br><span class="line">+----------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="添加数据到某个表-insert-into"><a href="#添加数据到某个表-insert-into" class="headerlink" title="添加数据到某个表 insert into"></a>添加数据到某个表 insert into</h3><p>提供完整数据的写法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into userinfo values(1, <span class="string">&#x27;username1&#x27;</span>, <span class="string">&#x27;123123&#x27;</span>, <span class="string">&#x27;guangzhou&#x27;</span>, 1, <span class="string">&#x27;1989/1/1 01:01:01&#x27;</span>);</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure><p>有些字段在创建数据表的阶段提供了默认值，例如地址 address，是否合法 valid，那么可以通过指定字段和对应值插入数据</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into userinfo(username, psw, birth) values(<span class="string">&#x27;user2&#x27;</span>, <span class="string">&#x27;123123123&#x27;</span>, <span class="string">&#x27;1989/1/1 01:01:01&#x27;</span>);</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from userinfo;</span><br><span class="line">+--------+-----------+-----------+---------------+-------+---------------------+</span><br><span class="line">| userid | username  | psw       | address       | valid | birth               |</span><br><span class="line">+--------+-----------+-----------+---------------+-------+---------------------+</span><br><span class="line">|      1 | username1 |    123123 | guangzhou     |     1 | 1989-01-01 01:01:01 |</span><br><span class="line">|      2 | user2     | 123123123 | empty address |     1 | 1989-01-01 01:01:01 |</span><br><span class="line">+--------+-----------+-----------+---------------+-------+---------------------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><p>某些字段指定了 not null 并且没有指定 default，则必须要提供值.</p><p>这个例子没有提供 username 字段的值，提示 username 没有默认值</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into userinfo(psw, birth) values(<span class="string">&#x27;123123&#x27;</span>, <span class="string">&#x27;1989/1/1 01:01:01&#x27;</span>);</span><br><span class="line">ERROR 1364 (HY000): Field <span class="string">&#x27;username&#x27;</span> doesn<span class="string">&#x27;t have a default value</span></span><br></pre></td></tr></table></figure><h3 id="选择查询-select"><a href="#选择查询-select" class="headerlink" title="选择查询 select"></a>选择查询 select</h3><p>在 userinfo 表中查询所有数据</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from userinfo;</span><br><span class="line">+--------+-----------+--------+-----------+-------+---------------------+</span><br><span class="line">| userid | username  | psw    | address   | valid | birth               |</span><br><span class="line">+--------+-----------+--------+-----------+-------+---------------------+</span><br><span class="line">|      1 | username1 | 123123 | guangzhou |     1 | 1989-01-01 01:01:01 |</span><br><span class="line">+--------+-----------+--------+-----------+-------+---------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="修改字段名称"><a href="#修改字段名称" class="headerlink" title="修改字段名称"></a>修改字段名称</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter table myuserinfo change psw password varchar(20);</span><br><span class="line">Query OK, 2 rows affected (0.05 sec)</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure><h3 id="更新一行数据"><a href="#更新一行数据" class="headerlink" title="更新一行数据"></a>更新一行数据</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; update userinfo <span class="built_in">set</span> age=56 <span class="built_in">where</span> userid=1;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br></pre></td></tr></table></figure><h2 id="mysql-数据类型"><a href="#mysql-数据类型" class="headerlink" title="mysql 数据类型"></a>mysql 数据类型</h2><h3 id="字符类型"><a href="#字符类型" class="headerlink" title="字符类型"></a>字符类型</h3><ul><li>char：固定长度 1-255 字节，定好了长度之后，无论实际长度，都是占用固定长度</li><li>varchar：可变长度 1-255 字节，定好了长度之后，会根据实际长度进行伸缩</li><li>text：大文本 65535 字节</li></ul><h3 id="整数类型"><a href="#整数类型" class="headerlink" title="整数类型"></a>整数类型</h3><ul><li>tinyint：1 byte</li><li>smallint：2 byte</li><li>mediumint：3 byte</li><li>int：4 byte</li><li>bigint：8 byte</li></ul><h3 id="浮动类型"><a href="#浮动类型" class="headerlink" title="浮动类型"></a>浮动类型</h3><ul><li>float：4 byte</li><li>double：8 byte</li></ul><h3 id="日期-x2F-时间类型"><a href="#日期-x2F-时间类型" class="headerlink" title="日期&#x2F;时间类型"></a>日期&#x2F;时间类型</h3><ul><li>date：3 byte 记录的是年月日</li><li>datetime：8 byte 年月日时分秒</li></ul><h2 id="数据库查询"><a href="#数据库查询" class="headerlink" title="数据库查询"></a>数据库查询</h2><h3 id="查询所有行"><a href="#查询所有行" class="headerlink" title="查询所有行"></a>查询所有行</h3><p>select * from &lt;table name&gt;</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from userinfo;</span><br><span class="line">+--------+-----------+-----------+---------------+-------+---------------------+</span><br><span class="line">| userid | username  | password  | address       | valid | birth               |</span><br><span class="line">+--------+-----------+-----------+---------------+-------+---------------------+</span><br><span class="line">|      1 | username1 | 123123    | guangzhou     |     1 | 1989-01-01 01:01:01 |</span><br><span class="line">|      2 | user2     | 123123123 | empty address |     1 | 1989-01-01 01:01:01 |</span><br><span class="line">+--------+-----------+-----------+---------------+-------+---------------------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.02 sec)</span><br></pre></td></tr></table></figure><h3 id="投影查询，即查询局部字段"><a href="#投影查询，即查询局部字段" class="headerlink" title="投影查询，即查询局部字段"></a>投影查询，即查询局部字段</h3><p>需要查询多个字段可以使用逗号分隔</p><p>select address from userinfo;<br>select userid,username from userinfo;</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select userid,username from userinfo;</span><br><span class="line">+--------+-----------+</span><br><span class="line">| userid | username  |</span><br><span class="line">+--------+-----------+</span><br><span class="line">|      1 | username1 |</span><br><span class="line">|      2 | user2     |</span><br><span class="line">+--------+-----------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="字段别名设置"><a href="#字段别名设置" class="headerlink" title="字段别名设置"></a>字段别名设置</h3><p>select userid,username as un, address as addr from userinfo;</p><p>通过关键字as，将username设置为别名un，address设置为addr</p><p>这种别名设置是临时的，并不会改动原有字段名</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select userid,username as un, address as addr from userinfo;</span><br><span class="line">+--------+-----------+---------------+</span><br><span class="line">| userid | un        | addr          |</span><br><span class="line">+--------+-----------+---------------+</span><br><span class="line">|      1 | username1 | guangzhou     |</span><br><span class="line">|      2 | user2     | empty address |</span><br><span class="line">+--------+-----------+---------------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="limit查询"><a href="#limit查询" class="headerlink" title="limit查询"></a>limit查询</h3><p><strong>注意：mysql的位置是从0开始，与我们大部分编程语言中的索引是一样的</strong></p><p><strong>注意：mysql的位置是从0开始，与我们大部分编程语言中的索引是一样的</strong></p><p><strong>注意：mysql的位置是从0开始，与我们大部分编程语言中的索引是一样的</strong></p><p>limit是mysql中的一个特殊关键字，有三种使用方式</p><ul><li>limit 记录数, 从第一条开始查询 select * from userinfo limit 1;</li><li>limit 起始位置，记录数  select * from userinfo limit 1,1;</li><li>limit 记录数 offset 偏移 select * from userinfo limit 1 offset 1;</li></ul><p>方式二和三的结果是一样的</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from userinfo <span class="built_in">limit</span> 2,3;</span><br><span class="line">mysql&gt; select * from userinfo <span class="built_in">limit</span> 3 offset 2;</span><br><span class="line"></span><br><span class="line">+--------+----------+----------+-----------+-------+---------------------+</span><br><span class="line">| userid | username | password | address   | valid | birth               |</span><br><span class="line">+--------+----------+----------+-----------+-------+---------------------+</span><br><span class="line">|      3 | user3    | 123123   | guangzhou |     1 | 1989-01-01 01:01:01 |</span><br><span class="line">|      4 | user4    | 123123   | guangzhou |     1 | 1989-01-01 01:01:01 |</span><br><span class="line">|      5 | user5    | 123123   | guangzhou |     1 | 1989-01-01 01:01:01 |</span><br><span class="line">+--------+----------+----------+-----------+-------+---------------------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h3><ul><li>and 并查询 select * from userinfo where username&#x3D;’user2’ and password&#x3D;’123123’;</li><li>or 或查询 select * from userinfo where username&#x3D;’user2’ or password&#x3D;’123123’;</li><li>between 区间查询 select * from userinfo where age between 30 and 35;</li><li>in 子查询,只会查询in里面的条件，30岁和35岁，31-34不算在内 select * from userinfo where age in(30,35);</li><li>is null 空查询 select * in userinfo where address is null;</li><li>like 模糊查询 % 代表1个或者多个<ul><li>select * from userinfo where username like ‘%us’;  us在后面</li><li>select * from userinfo where username like ‘us%’;  us在前面</li><li>select * from userinfo where username like ‘%us%’; us在任何位置</li><li>select * from userinfo where username like ‘__us’; us前面必须有两个字符</li><li>select * from userinfo where username like binary ‘__Us’; 区分大小写</li></ul></li></ul><p>示例</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from userinfo <span class="built_in">where</span> username=<span class="string">&#x27;user3&#x27;</span> and password=<span class="string">&#x27;123123&#x27;</span>;</span><br><span class="line">+--------+----------+----------+-----------+-------+---------------------+</span><br><span class="line">| userid | username | password | address   | valid | birth               |</span><br><span class="line">+--------+----------+----------+-----------+-------+---------------------+</span><br><span class="line">|      3 | user3    | 123123   | guangzhou |     1 | 1989-01-01 01:01:01 |</span><br><span class="line">+--------+----------+----------+-----------+-------+---------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> database </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> database </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue项目的基础设施搭建（一）</title>
      <link href="/environment/frontend/vue/"/>
      <url>/environment/frontend/vue/</url>
      
        <content type="html"><![CDATA[<p>vue3 + typescript + eslint + husky + pnpm</p><p>统一化团队的代码风格，样式，git规范等</p><span id="more"></span><h2 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h2><p>一般前端基建包括以下内容：</p><ul><li>基本语言：javascript、Typescript</li><li>环境配置：env文件内容注入</li><li>打包构建工具：例如Webpack、Rollup、vite等；</li><li>包管理工具：例如npm、Yarn、pnpm等；</li><li>前端框架：例如React、Vue.js等；</li><li>代码质量工具：例如ESLint、Prettier等；</li><li>单元测试：例如Jest、Mocha等；</li><li>HTTP请求库：例如Axios、Fetch等；</li><li>状态管理工具：例如Redux、Mobx、vuex、pinna等；</li><li>UI组件库：例如Ant Design、Element UI、自建组件库等；</li><li>前端性能分析工具：例如Lighthouse、WebPageTest等；</li><li>应用部署与自动化工具：例如Docker、Travis CI等。</li></ul><h2 id="monorepo项目搭建"><a href="#monorepo项目搭建" class="headerlink" title="monorepo项目搭建"></a>monorepo项目搭建</h2><p>现在很大一部分框架都采用了pnpm进行多包的管理，例如vue，element-plus等</p><p>官方文档：<a href="https://pnpm.io/zh/motivation">https://pnpm.io/zh/motivation</a></p><p>具体事项不再细说，本文章主要目的是手把手的操作与记录。</p><h3 id="pnpm安装"><a href="#pnpm安装" class="headerlink" title="pnpm安装"></a>pnpm安装</h3><p>个人建议pnpm全局安装，更加的方便</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局安装pnpm</span></span><br><span class="line">npm install -g pnpm</span><br><span class="line"><span class="comment"># 打印版本，当前我使用的8.0.0</span></span><br><span class="line">pnpm --version </span><br><span class="line"><span class="comment"># 列出帮助文档</span></span><br><span class="line">pnpm -h </span><br></pre></td></tr></table></figure><h3 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h3><p>pnpm-workspace.yaml定义了工作空间的根目录，并能够使您从工作空间中包含 &#x2F; 排除目录 。默认情况下，包含所有子目录。</p><p>在项目根目录初始化和创建pnpm-workspace.yaml文件，并填入示例内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm init</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> pnpm-workspace.yaml</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pnpm-workspace.yaml</span></span><br><span class="line"><span class="attr">packages:</span></span><br><span class="line">  <span class="comment"># packages下所有直接子包</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;packages/*&#x27;</span></span><br></pre></td></tr></table></figure><p>假定我们的模块分块是core，utils，components，那么就可以在packages目录下分别新建这三个文件夹，分别执行pnpm init去生成对应package.json文件</p><p>示例：其他模块同理，这里不再赘述</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> packages</span><br><span class="line"><span class="built_in">mkdir</span> core &amp;&amp; <span class="built_in">cd</span> core &amp;&amp; pnpm init</span><br></pre></td></tr></table></figure><h4 id="node-modules扁平化的问题"><a href="#node-modules扁平化的问题" class="headerlink" title="node_modules扁平化的问题"></a>node_modules扁平化的问题</h4><p>pnpm的node_modules结构是非扁平化的，而npm和yarn采用了平铺的node_modules结构，平铺结构的一个较明显的问题是幽灵依赖，即在package.json中没有定义，但是我们可以导入使用的依赖。</p><p>如果需要pnpm将node_modules平铺，根目录新建.npmrc文件，填入shamefully-hoist&#x3D;true</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># .npmrc</span></span><br><span class="line">shamefully-hoist=<span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="typescript"><a href="#typescript" class="headerlink" title="typescript"></a>typescript</h2><p>typescript的安装一般会选择跟随项目，即在项目内安装typescript，避免不同typescript版本导致的兼容性问题</p><h3 id="安装和初始化"><a href="#安装和初始化" class="headerlink" title="安装和初始化"></a>安装和初始化</h3><p>全项目ts，安装在根目录即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm add typescript -Dw</span><br></pre></td></tr></table></figure><p>初始化，操作完成后执行目录会生成一个tsconfig.json</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx tsc --init</span><br></pre></td></tr></table></figure><h3 id="tsconfig"><a href="#tsconfig" class="headerlink" title="tsconfig"></a>tsconfig</h3><p>参考element-plus，为了提高tsconfig的扩展性，提供tsconfig.base.json，tsconfig.web.json, tsconfig.json等文件，tsconfig.json主要作为一个入口，用于引用其他tsconfig文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// tsconfig.base.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">/* Visit https://aka.ms/tsconfig to read more about this file */</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ES2018&quot;</span><span class="punctuation">,</span> <span class="comment">// es版本，不同的es版本会对es特性进行降级</span></span><br><span class="line">    <span class="attr">&quot;module&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ESNext&quot;</span><span class="punctuation">,</span> <span class="comment">// 指定生成哪个模块系统代码 &quot;CommonJS&quot; &quot;ES6&quot;或 &quot;ESNext&quot;。 </span></span><br><span class="line">    <span class="attr">&quot;moduleResolution&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node&quot;</span><span class="punctuation">,</span> <span class="comment">// 如何处理模块</span></span><br><span class="line">    <span class="attr">&quot;checkJs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="comment">// 在 .js文件中报告错误。与 --allowJs配合使用</span></span><br><span class="line">    <span class="attr">&quot;allowJs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="comment">// 允许编译javascript文件</span></span><br><span class="line">    <span class="attr">&quot;outDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dist&quot;</span><span class="punctuation">,</span> <span class="comment">// 解析非相对模块名的基准目录</span></span><br><span class="line">    <span class="attr">&quot;baseUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./&quot;</span><span class="punctuation">,</span> <span class="comment">// 设置baseUrl来告诉编译器到哪里去查找模块。 所有非相对模块导入都会被当做相对于 baseUrl</span></span><br><span class="line">    <span class="attr">&quot;sourceMap&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;strict&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;noUnusedLocals&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">// 若有未使用的局部变量则抛错</span></span><br><span class="line">    <span class="attr">&quot;resolveJsonModule&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">// 允许解析json文件</span></span><br><span class="line">    <span class="attr">&quot;allowSyntheticDefaultImports&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">// 允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。 设置了esModuleInterop和module !== es2015 / esnext</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * import * as moment from &quot;moment&quot; 等价于 const moment = require(&quot;moment&quot;)</span></span><br><span class="line"><span class="comment">    * import moment from &quot;moment&quot; 等价于 const moment = require(&quot;moment&quot;).default</span></span><br><span class="line"><span class="comment">    * es6模块规范规定，import * as x 应该是一个对象，ts处理成 =require(xxx)的行为是把导入当作一个可调用的函数，不符合规范</span></span><br><span class="line"><span class="comment">    * 开启esModuleInterop会自动修复这个转译问题</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attr">&quot;esModuleInterop&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> </span><br><span class="line">    <span class="attr">&quot;removeComments&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 如果composite为true</span></span><br><span class="line">    <span class="comment">// rootDir设置，如果没有被显式指定，默认为包含tsconfig文件的目录</span></span><br><span class="line">    <span class="comment">// 必须匹配到include模式或者files数组</span></span><br><span class="line">    <span class="attr">&quot;rootDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.&quot;</span><span class="punctuation">,</span> <span class="comment">// 所有输入的 非声明文件 中的最长公共路径，</span></span><br><span class="line">    <span class="attr">&quot;types&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="comment">// 指定要包含的类型包名称，而不需要在源文件中引用</span></span><br><span class="line">    <span class="attr">&quot;paths&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="comment">// 路径映射</span></span><br><span class="line">      <span class="attr">&quot;@acelcdev/lc-client-*&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;packages/*&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// tsconfig.web.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;extends&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./tsconfig.base.json&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;composite&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">// 引用的工程必须启用新的composite设置</span></span><br><span class="line">    <span class="attr">&quot;jsx&quot;</span><span class="punctuation">:</span> <span class="string">&quot;preserve&quot;</span><span class="punctuation">,</span> <span class="comment">// tsx文件里面支持jsx</span></span><br><span class="line">    <span class="attr">&quot;lib&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;ES2018&quot;</span><span class="punctuation">,</span> <span class="string">&quot;DOM&quot;</span><span class="punctuation">,</span> <span class="string">&quot;DOM.Iterable&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="comment">// 编译过程中需要引入的库文件的列表</span></span><br><span class="line">    <span class="attr">&quot;types&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipLibCheck&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="comment">// 忽略所有的声明文件（ *.d.ts）的类型检查。</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;include&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;packages/**/*&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;exclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;node_modules&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;**/dist&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;**/__tests__/**/*&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;**/gulpfile.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;**/test-helper&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;**/*.md&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;docs&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>总入口</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// tsconfig.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;files&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;references&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span> <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./tsconfig.web.json&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>项目根目录执行</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx tsc --build tsconfig.json</span><br></pre></td></tr></table></figure><p>在根目录生成了dist文件夹，内部结构与packages一致，同时具有js文件和d.ts声明文件</p><h2 id="eslint"><a href="#eslint" class="headerlink" title="eslint"></a>eslint</h2><h3 id="安装和初始化-1"><a href="#安装和初始化-1" class="headerlink" title="安装和初始化"></a>安装和初始化</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm add eslint -Dw</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm create @eslint/config</span><br></pre></td></tr></table></figure><p>这里笔者选择的是To check syntax and find problems</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">? How would you like to use ESLint? … </span><br><span class="line">  To check syntax only</span><br><span class="line">❯ To check syntax and find problems</span><br><span class="line">  To check syntax, find problems, and enforce code style</span><br></pre></td></tr></table></figure><p>使用的是es6规范，所以选择javascript modules，要看自己项目需求</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">? What <span class="built_in">type</span> of modules does your project use? ...</span><br><span class="line">&gt; JavaScript modules (import/export)</span><br><span class="line">  CommonJS (require/exports)</span><br><span class="line">  None of these</span><br></pre></td></tr></table></figure><p>看自己项目需求</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">? Which framework does your project use? … </span><br><span class="line">  React</span><br><span class="line">❯ Vue.js</span><br><span class="line">  None of these</span><br></pre></td></tr></table></figure><p>使用ts?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Does your project use TypeScript? » No / Yes</span><br></pre></td></tr></table></figure><p>两个都选</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">? Where does your code run? ...  (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection)</span><br><span class="line">√ Browser</span><br><span class="line">√ Node</span><br></pre></td></tr></table></figure><p>配置文件格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">? What format do you want your config file to be in? ...</span><br><span class="line">&gt; JavaScript</span><br><span class="line">  YAML</span><br><span class="line">  JSON</span><br></pre></td></tr></table></figure><p>笔者选择了yes</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eslint-plugin-vue@latest @typescript-eslint/eslint-plugin@latest @typescript-eslint/parser@latest</span><br><span class="line">? Would you like to install them now? › No / Yes</span><br></pre></td></tr></table></figure><p>后续的可以根据项目需求调整即可，最后生成.eslint.js文件</p><p>项目根目录安装下列eslint插件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm add eslint-plugin-vue @typescript-eslint/eslint-plugin@latest -Dw</span><br></pre></td></tr></table></figure><h3 id="eslintrc-js-amp-eslintignore"><a href="#eslintrc-js-amp-eslintignore" class="headerlink" title=".eslintrc.js &amp; .eslintignore"></a>.eslintrc.js &amp; .eslintignore</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .eslintrc.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="string">&quot;env&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;browser&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;es2021&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;node&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;extends&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;eslint:recommended&quot;</span>,</span><br><span class="line">        <span class="string">&quot;plugin:vue/vue3-recommended&quot;</span>, <span class="comment">// 原来是plugin:vue/vue3-essential</span></span><br><span class="line">        <span class="string">&quot;plugin:@typescript-eslint/recommended&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;overrides&quot;</span>: [</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;parser&quot;</span>: <span class="string">&quot;@typescript-eslint/parser&quot;</span>,</span><br><span class="line">    <span class="string">&quot;parserOptions&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;ecmaVersion&quot;</span>: <span class="string">&quot;latest&quot;</span>,</span><br><span class="line">        <span class="string">&quot;sourceType&quot;</span>: <span class="string">&quot;module&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;plugins&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;vue&quot;</span>,</span><br><span class="line">        <span class="string">&quot;@typescript-eslint&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;rules&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;semi&quot;</span>: [<span class="string">&quot;error&quot;</span>, <span class="string">&quot;always&quot;</span>],</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>.eslintignore文件是一个纯文本文件，每一行都是一个glob模式告知eslint忽略哪些文件或者目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># .eslintignore</span></span><br><span class="line">*.js</span><br><span class="line">dist</span><br><span class="line">docs</span><br></pre></td></tr></table></figure><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p>根目录package.json新增脚本，目前只需要校验packages里面的ts文件，具体文件需要根据项目需求进行配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;lint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eslint --ext .ts packages/&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lint:fix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eslint --ext .ts packages/ --fix&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  ...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>在index.ts内定义了const a &#x3D; 1，故意不带分号，eslintrc里面设置了不带分号就报错</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pnpm lint</span><br><span class="line"></span><br><span class="line">&gt; eslint --ext .ts packages/</span><br><span class="line"></span><br><span class="line">/path/packages/core/index.ts</span><br><span class="line">  1:7   warning  <span class="string">&#x27;a&#x27;</span> is assigned a value but never used  @typescript-eslint/no-unused-vars</span><br><span class="line">  1:12  error    Missing semicolon                       semi</span><br><span class="line"></span><br><span class="line">✖ 2 problems (1 error, 1 warning)</span><br><span class="line">  1 error and 0 warnings potentially fixable with the `--fix` option.</span><br></pre></td></tr></table></figure><p>这个时候可以运行pnpm lint:fix进行修复</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pnpm lint:fix</span><br><span class="line"><span class="comment"># 修复后，只剩一个a变量定义但没有使用的warning</span></span><br><span class="line">&gt; eslint --ext .ts packages/ --fix</span><br><span class="line"></span><br><span class="line">/path/packages/core/index.ts</span><br><span class="line">  1:7  warning  <span class="string">&#x27;a&#x27;</span> is assigned a value but never used  @typescript-eslint/no-unused-vars</span><br><span class="line"></span><br><span class="line">✖ 1 problem (0 errors, 1 warning)</span><br></pre></td></tr></table></figure><h3 id="vscode-eslint设置"><a href="#vscode-eslint设置" class="headerlink" title="vscode eslint设置"></a>vscode eslint设置</h3><p>生效的前提是必须去vscode的扩展商店安装eslint插件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .vscode/settings.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;update.enableWindowsBackgroundUpdates&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.codeActionsOnSave&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;source.fixAll.eslint&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// 每次保存的时候自动格式化</span></span><br><span class="line">  <span class="attr">&quot;editor.formatOnSave&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dbaeumer.vscode-eslint&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;eslint.format.enable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;eslint.alwaysShowStatus&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;eslint.validate&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;vue&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;typescript&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;typescriptreact&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="husky-amp-commitlint"><a href="#husky-amp-commitlint" class="headerlink" title="husky &amp; commitlint"></a>husky &amp; commitlint</h2><p>husky是前端工程化的一个重要工具，可以方便的向项目中添加git hooks，一般在commit之前校验代码，commit的时候检验commit信息是否符合规范，而且设置简单。</p><h3 id="husky安装和初始化"><a href="#husky安装和初始化" class="headerlink" title="husky安装和初始化"></a>husky安装和初始化</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm add husky -Dw</span><br></pre></td></tr></table></figure><p>package.json中添加prepare脚本，执行git init，再执行pnpm prepare</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="attr">&quot;prepare&quot;</span><span class="punctuation">:</span> <span class="string">&quot;husky install&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  ...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>执行完上述命令后，根目录会存在一个.husky文件夹，接下来执行以下命令，在commit的时候，就会自动运行pnpm lint，如果lint不通过，将会终止git commit。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx husky add .husky/pre-commit <span class="string">&quot;pnpm lint&quot;</span></span><br></pre></td></tr></table></figure><p>如果git commit因为代码校验不通过而被终止，这时候可以通过pnpm lint:fix进行代码自动格式化，通过代码校验后即可以再次commit</p><h3 id="commitlint安装和初始化"><a href="#commitlint安装和初始化" class="headerlink" title="commitlint安装和初始化"></a>commitlint安装和初始化</h3><p>commitlint的作用是校验commit信息的规范性，官方提供了对应commit信息的模板，类似于git commit -m “test” 这类的commit是无法通过校验的。</p><p>一般要求的格式是</p><ul><li>feat: xxx</li><li>fix: xxx</li><li>docs: xxx</li></ul><p>官方文档：<a href="https://commitlint.js.org/#/reference-prompt">https://commitlint.js.org/#/reference-prompt</a></p><p>示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;feat: add some feature&quot;</span><br><span class="line">git commit -m &quot;fix: fix some bug&quot;</span><br></pre></td></tr></table></figure><h4 id="安装和初始化-2"><a href="#安装和初始化-2" class="headerlink" title="安装和初始化"></a>安装和初始化</h4><p>安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm add @commitlint/cli @commitlint/config-conventional -Dw</span><br></pre></td></tr></table></figure><p>设置commitlint需要遵循的规范，在根目录创建commitlint.config.js，填入以下内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">extends</span>: [<span class="string">&quot;@commitlint/config-conventional&quot;</span>]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>配合husky使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx husky add .husky/commit-msg  &#x27;npx --no -- commitlint --edit $&#123;1&#125;&#x27;</span><br></pre></td></tr></table></figure><h3 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h3><p>首先故意设置const a &#x3D; 1 不带分号，导致pre-commit终止</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; eslint --ext .ts packages/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/path/packages/client/index.ts</span><br><span class="line">  1:7   warning  <span class="string">&#x27;a&#x27;</span> is assigned a value but never used  @typescript-eslint/no-unused-vars</span><br><span class="line">  1:14  error    Missing semicolon                       semi</span><br><span class="line"></span><br><span class="line">✖ 2 problems (1 error, 1 warning)</span><br><span class="line">  1 error and 0 warnings potentially fixable with the `--fix` option.</span><br><span class="line"></span><br><span class="line"> ELIFECYCLE  Command failed with <span class="built_in">exit</span> code 1.</span><br></pre></td></tr></table></figure><p>运行pnpm lint:fix修复，修复后提示a未被使用，但是没有error</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; eslint --ext .ts packages/ --fix</span><br><span class="line"></span><br><span class="line">/path/packages/client/index.ts</span><br><span class="line">  1:7  warning  <span class="string">&#x27;a&#x27;</span> is assigned a value but never used  @typescript-eslint/no-unused-vars</span><br><span class="line"></span><br><span class="line">✖ 1 problem (0 errors, 1 warning)</span><br></pre></td></tr></table></figure><p>再次提交commit，故意不按照commit规范</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;test commit-msg hook&quot;</span></span><br></pre></td></tr></table></figure><p>此时提示commit-msg hook error</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">⧗  input: <span class="built_in">test</span> commit-msg hook</span><br><span class="line">✖   Please add rules to your `commitlint.config.js`</span><br><span class="line">    - Getting started guide: https://commitlint.js.org/<span class="comment">#/?id=getting-started</span></span><br><span class="line">    - Example config: https://github.com/conventional-changelog/commitlint/blob/master/%40commitlint/config-conventional/index.js [empty-rules]</span><br><span class="line"></span><br><span class="line">✖   found 1 problems, 0 warnings</span><br><span class="line">ⓘ   Get <span class="built_in">help</span>: https://github.com/conventional-changelog/commitlint/<span class="comment">#what-is-commitlint</span></span><br><span class="line"></span><br><span class="line">husky - commit-msg hook exited with code 1 (error)</span><br></pre></td></tr></table></figure><p>修改commit msg，校验通过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;test: test commitlint&quot;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">feat/initial 6490b0c] <span class="built_in">test</span>: <span class="built_in">test</span> commit lint</span><br><span class="line"> 3 files changed, 1077 insertions(+)</span><br><span class="line"> create mode 100755 .husky/commit-msg</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本文的内容相对基础，主要是总结一下具体的用途和解决方案，并非很详细的教学内容，如果需要高级的用法，最好的方法还是通过官方文档，去学习如何配置，高级用法等。</p><p>下一篇计划开始编写与环境配置、构建相关的内容。</p>]]></content>
      
      
      <categories>
          
          <category> environment </category>
          
          <category> frontend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> environment </tag>
            
            <tag> frontend </tag>
            
            <tag> 前端 </tag>
            
            <tag> vue3 </tag>
            
            <tag> typescipt </tag>
            
            <tag> eslint </tag>
            
            <tag> husky </tag>
            
            <tag> pnpm </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
